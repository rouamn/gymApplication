// <auto-generated />
using System;
using GymApplication.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApplication.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20240724222300_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GymApplication.Repository.Models.Abonnement", b =>
                {
                    b.Property<int>("IdAbonnement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_abonnement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAbonnement"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("date")
                        .HasColumnName("date_debut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("date")
                        .HasColumnName("date_fin");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("id_utilisateur");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("prix");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statut");

                    b.Property<string>("TypeAbonnement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type_abonnement");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdAbonnement")
                        .HasName("PK__Abonneme__395058AB06AC8C7D");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Abonnement");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Cour", b =>
                {
                    b.Property<int>("IdCours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cours");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCours"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<TimeSpan>("Duree")
                        .HasColumnType("time")
                        .HasColumnName("duree");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nom");

                    b.HasKey("IdCours")
                        .HasName("PK__Cours__7927EBB9D64C6A59");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Evenement", b =>
                {
                    b.Property<int>("IdEvenement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_evenement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvenement"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nom");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdEvenement")
                        .HasName("PK__Evenemen__F6BFCE778F3DA503");

                    b.ToTable("Evenement");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Paiement", b =>
                {
                    b.Property<int>("IdPaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_paiement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaiement"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("id_utilisateur");

                    b.Property<string>("MethodePaiement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("methode_paiement");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("montant");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdPaiement")
                        .HasName("PK__Paiement__72D44CFF086B29B8");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Paiement");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Planning", b =>
                {
                    b.Property<int>("IdPlanning")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_planning");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlanning"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<TimeSpan>("HeureDebut")
                        .HasColumnType("time")
                        .HasColumnName("heure_debut");

                    b.Property<TimeSpan>("HeureFin")
                        .HasColumnType("time")
                        .HasColumnName("heure_fin");

                    b.Property<int>("IdEvenement")
                        .HasColumnType("int")
                        .HasColumnName("id_evenement");

                    b.Property<DateTime>("Jour")
                        .HasColumnType("date")
                        .HasColumnName("jour");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdPlanning")
                        .HasName("PK__Planning__0119D9CC46D31DDD");

                    b.HasIndex("IdEvenement");

                    b.ToTable("Planning");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Profil", b =>
                {
                    b.Property<int>("IdPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_photo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPhoto"), 1L, 1);

                    b.Property<string>("Biographie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("biographie");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("id_utilisateur");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("photo");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdPhoto")
                        .HasName("PK__Profil__599E10ACBD030CCE");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Profil");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_utilisateur");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilisateur"), 1L, 1);

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("adresse");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("date_naissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mot_de_passe");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nom");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("prenom");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telephone");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdUtilisateur")
                        .HasName("PK__Utilisat__1A4FA5B8F3C735FF");

                    b.HasIndex(new[] { "Email" }, "UQ__Utilisat__AB6E6164DFB2DE3B")
                        .IsUnique();

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Abonnement", b =>
                {
                    b.HasOne("GymApplication.Repository.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Abonnements")
                        .HasForeignKey("IdUtilisateur")
                        .IsRequired()
                        .HasConstraintName("FK__Abonnemen__id_ut__3E52440B");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Paiement", b =>
                {
                    b.HasOne("GymApplication.Repository.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Paiements")
                        .HasForeignKey("IdUtilisateur")
                        .IsRequired()
                        .HasConstraintName("FK__Paiement__id_uti__46E78A0C");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Planning", b =>
                {
                    b.HasOne("GymApplication.Repository.Models.Evenement", "IdEvenementNavigation")
                        .WithMany("Plannings")
                        .HasForeignKey("IdEvenement")
                        .IsRequired()
                        .HasConstraintName("FK__Planning__id_eve__52593CB8");

                    b.Navigation("IdEvenementNavigation");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Profil", b =>
                {
                    b.HasOne("GymApplication.Repository.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Profils")
                        .HasForeignKey("IdUtilisateur")
                        .IsRequired()
                        .HasConstraintName("FK__Profil__id_utili__4D94879B");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Evenement", b =>
                {
                    b.Navigation("Plannings");
                });

            modelBuilder.Entity("GymApplication.Repository.Models.Utilisateur", b =>
                {
                    b.Navigation("Abonnements");

                    b.Navigation("Paiements");

                    b.Navigation("Profils");
                });
#pragma warning restore 612, 618
        }
    }
}
